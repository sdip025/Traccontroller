package com.gps21.model;

// Generated Mar 16, 2017 3:16:37 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Devices generated by hbm2java
 */
@Entity
@Table(name = "devices", catalog = "traccar", uniqueConstraints = @UniqueConstraint(columnNames = "uniqueId"))
public class Devices implements java.io.Serializable {

	private Long id;
	private Pictures pictures;
	private DeviceIcons deviceIcons;
	private Groups groups;
	private Positions positions;
	private Users users;
	private Boolean autoUpdateOdometer;
	private String description;
	private String iconArrowMovingColor;
	private String iconArrowOfflineColor;
	private String iconArrowPausedColor;
	private Double iconArrowRadius;
	private String iconArrowStoppedColor;
	private String iconMode;
	private Boolean iconRotation;
	private String iconType;
	private Double idleSpeedThreshold;
	private Date lastupdate;
	private Integer minIdleTime;
	private String name;
	private Double odometer;
	private String phoneNumber;
	private String plateNumber;
	private Boolean showName;
	private Boolean showOdometer;
	private Boolean showProtocol;
	private Double speedLimit;
	private String status;
	private Integer timeout;
	private String uniqueId;
	private String vehicleInfo;
	private Set<Geofences> geofenceses = new HashSet<Geofences>(0);
	private Set<Users> userses = new HashSet<Users>(0);
	private Set<Maintenances> maintenanceses = new HashSet<Maintenances>(0);
	private Set<Events> eventses = new HashSet<Events>(0);
	private Set<Reports> reportses = new HashSet<Reports>(0);
	private Set<Sensors> sensorses = new HashSet<Sensors>(0);
	private Set<Positions> positionses = new HashSet<Positions>(0);

	public Devices() {
	}

	public Devices(Pictures pictures, DeviceIcons deviceIcons, Groups groups,
			Positions positions, Users users, Boolean autoUpdateOdometer,
			String description, String iconArrowMovingColor,
			String iconArrowOfflineColor, String iconArrowPausedColor,
			Double iconArrowRadius, String iconArrowStoppedColor,
			String iconMode, Boolean iconRotation, String iconType,
			Double idleSpeedThreshold, Date lastupdate, Integer minIdleTime,
			String name, Double odometer, String phoneNumber,
			String plateNumber, Boolean showName, Boolean showOdometer,
			Boolean showProtocol, Double speedLimit, String status,
			Integer timeout, String uniqueId, String vehicleInfo,
			Set<Geofences> geofenceses, Set<Users> userses,
			Set<Maintenances> maintenanceses, Set<Events> eventses,
			Set<Reports> reportses, Set<Sensors> sensorses,
			Set<Positions> positionses) {
		this.pictures = pictures;
		this.deviceIcons = deviceIcons;
		this.groups = groups;
		this.positions = positions;
		this.users = users;
		this.autoUpdateOdometer = autoUpdateOdometer;
		this.description = description;
		this.iconArrowMovingColor = iconArrowMovingColor;
		this.iconArrowOfflineColor = iconArrowOfflineColor;
		this.iconArrowPausedColor = iconArrowPausedColor;
		this.iconArrowRadius = iconArrowRadius;
		this.iconArrowStoppedColor = iconArrowStoppedColor;
		this.iconMode = iconMode;
		this.iconRotation = iconRotation;
		this.iconType = iconType;
		this.idleSpeedThreshold = idleSpeedThreshold;
		this.lastupdate = lastupdate;
		this.minIdleTime = minIdleTime;
		this.name = name;
		this.odometer = odometer;
		this.phoneNumber = phoneNumber;
		this.plateNumber = plateNumber;
		this.showName = showName;
		this.showOdometer = showOdometer;
		this.showProtocol = showProtocol;
		this.speedLimit = speedLimit;
		this.status = status;
		this.timeout = timeout;
		this.uniqueId = uniqueId;
		this.vehicleInfo = vehicleInfo;
		this.geofenceses = geofenceses;
		this.userses = userses;
		this.maintenanceses = maintenanceses;
		this.eventses = eventses;
		this.reportses = reportses;
		this.sensorses = sensorses;
		this.positionses = positionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "photo_id")
	public Pictures getPictures() {
		return this.pictures;
	}

	public void setPictures(Pictures pictures) {
		this.pictures = pictures;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "icon_id")
	public DeviceIcons getDeviceIcons() {
		return this.deviceIcons;
	}

	public void setDeviceIcons(DeviceIcons deviceIcons) {
		this.deviceIcons = deviceIcons;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "group_id")
	public Groups getGroups() {
		return this.groups;
	}

	public void setGroups(Groups groups) {
		this.groups = groups;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "latestPosition_id")
	public Positions getPositions() {
		return this.positions;
	}

	public void setPositions(Positions positions) {
		this.positions = positions;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "owner_id")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "autoUpdateOdometer")
	public Boolean getAutoUpdateOdometer() {
		return this.autoUpdateOdometer;
	}

	public void setAutoUpdateOdometer(Boolean autoUpdateOdometer) {
		this.autoUpdateOdometer = autoUpdateOdometer;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "iconArrowMovingColor")
	public String getIconArrowMovingColor() {
		return this.iconArrowMovingColor;
	}

	public void setIconArrowMovingColor(String iconArrowMovingColor) {
		this.iconArrowMovingColor = iconArrowMovingColor;
	}

	@Column(name = "iconArrowOfflineColor")
	public String getIconArrowOfflineColor() {
		return this.iconArrowOfflineColor;
	}

	public void setIconArrowOfflineColor(String iconArrowOfflineColor) {
		this.iconArrowOfflineColor = iconArrowOfflineColor;
	}

	@Column(name = "iconArrowPausedColor")
	public String getIconArrowPausedColor() {
		return this.iconArrowPausedColor;
	}

	public void setIconArrowPausedColor(String iconArrowPausedColor) {
		this.iconArrowPausedColor = iconArrowPausedColor;
	}

	@Column(name = "iconArrowRadius", precision = 22, scale = 0)
	public Double getIconArrowRadius() {
		return this.iconArrowRadius;
	}

	public void setIconArrowRadius(Double iconArrowRadius) {
		this.iconArrowRadius = iconArrowRadius;
	}

	@Column(name = "iconArrowStoppedColor")
	public String getIconArrowStoppedColor() {
		return this.iconArrowStoppedColor;
	}

	public void setIconArrowStoppedColor(String iconArrowStoppedColor) {
		this.iconArrowStoppedColor = iconArrowStoppedColor;
	}

	@Column(name = "iconMode")
	public String getIconMode() {
		return this.iconMode;
	}

	public void setIconMode(String iconMode) {
		this.iconMode = iconMode;
	}

	@Column(name = "iconRotation")
	public Boolean getIconRotation() {
		return this.iconRotation;
	}

	public void setIconRotation(Boolean iconRotation) {
		this.iconRotation = iconRotation;
	}

	@Column(name = "iconType")
	public String getIconType() {
		return this.iconType;
	}

	public void setIconType(String iconType) {
		this.iconType = iconType;
	}

	@Column(name = "idleSpeedThreshold", precision = 22, scale = 0)
	public Double getIdleSpeedThreshold() {
		return this.idleSpeedThreshold;
	}

	public void setIdleSpeedThreshold(Double idleSpeedThreshold) {
		this.idleSpeedThreshold = idleSpeedThreshold;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastupdate", length = 19)
	public Date getLastupdate() {
		return this.lastupdate;
	}

	public void setLastupdate(Date lastupdate) {
		this.lastupdate = lastupdate;
	}

	@Column(name = "minIdleTime")
	public Integer getMinIdleTime() {
		return this.minIdleTime;
	}

	public void setMinIdleTime(Integer minIdleTime) {
		this.minIdleTime = minIdleTime;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "odometer", precision = 22, scale = 0)
	public Double getOdometer() {
		return this.odometer;
	}

	public void setOdometer(Double odometer) {
		this.odometer = odometer;
	}

	@Column(name = "phoneNumber")
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "plateNumber")
	public String getPlateNumber() {
		return this.plateNumber;
	}

	public void setPlateNumber(String plateNumber) {
		this.plateNumber = plateNumber;
	}

	@Column(name = "showName")
	public Boolean getShowName() {
		return this.showName;
	}

	public void setShowName(Boolean showName) {
		this.showName = showName;
	}

	@Column(name = "showOdometer")
	public Boolean getShowOdometer() {
		return this.showOdometer;
	}

	public void setShowOdometer(Boolean showOdometer) {
		this.showOdometer = showOdometer;
	}

	@Column(name = "showProtocol")
	public Boolean getShowProtocol() {
		return this.showProtocol;
	}

	public void setShowProtocol(Boolean showProtocol) {
		this.showProtocol = showProtocol;
	}

	@Column(name = "speedLimit", precision = 22, scale = 0)
	public Double getSpeedLimit() {
		return this.speedLimit;
	}

	public void setSpeedLimit(Double speedLimit) {
		this.speedLimit = speedLimit;
	}

	@Column(name = "status", length = 128)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "timeout")
	public Integer getTimeout() {
		return this.timeout;
	}

	public void setTimeout(Integer timeout) {
		this.timeout = timeout;
	}

	@Column(name = "uniqueId", unique = true)
	public String getUniqueId() {
		return this.uniqueId;
	}

	public void setUniqueId(String uniqueId) {
		this.uniqueId = uniqueId;
	}

	@Column(name = "vehicleInfo")
	public String getVehicleInfo() {
		return this.vehicleInfo;
	}

	public void setVehicleInfo(String vehicleInfo) {
		this.vehicleInfo = vehicleInfo;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "devices_geofences", catalog = "traccar", joinColumns = { @JoinColumn(name = "device_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "geofence_id", nullable = false, updatable = false) })
	public Set<Geofences> getGeofenceses() {
		return this.geofenceses;
	}

	public void setGeofenceses(Set<Geofences> geofenceses) {
		this.geofenceses = geofenceses;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "users_devices", catalog = "traccar", joinColumns = { @JoinColumn(name = "devices_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "users_id", nullable = false, updatable = false) })
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "devices")
	public Set<Maintenances> getMaintenanceses() {
		return this.maintenanceses;
	}

	public void setMaintenanceses(Set<Maintenances> maintenanceses) {
		this.maintenanceses = maintenanceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "devices")
	public Set<Events> getEventses() {
		return this.eventses;
	}

	public void setEventses(Set<Events> eventses) {
		this.eventses = eventses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "reports_devices", catalog = "traccar", joinColumns = { @JoinColumn(name = "device_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "report_id", nullable = false, updatable = false) })
	public Set<Reports> getReportses() {
		return this.reportses;
	}

	public void setReportses(Set<Reports> reportses) {
		this.reportses = reportses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "devices")
	public Set<Sensors> getSensorses() {
		return this.sensorses;
	}

	public void setSensorses(Set<Sensors> sensorses) {
		this.sensorses = sensorses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "devices")
	public Set<Positions> getPositionses() {
		return this.positionses;
	}

	public void setPositionses(Set<Positions> positionses) {
		this.positionses = positionses;
	}

}
