package com.gps21.model;

// Generated Mar 16, 2017 3:16:37 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ApplicationSettings generated by hbm2java
 */
@Entity
@Table(name = "application_settings", catalog = "traccar")
public class ApplicationSettings implements java.io.Serializable {

	private Long id;
	private UserSettings userSettings;
	private Boolean allowCommandsOnlyForAdmins;
	private String bingMapsKey;
	private String defaultPasswordHash;
	private Boolean disallowDeviceManagementByUsers;
	private Boolean eventRecordingEnabled;
	private String language;
	private String matchServiceUrl;
	private Integer notificationExpirationPeriod;
	private boolean registrationEnabled;
	private String salt;
	private Short updateInterval;

	public ApplicationSettings() {
	}

	public ApplicationSettings(boolean registrationEnabled) {
		this.registrationEnabled = registrationEnabled;
	}

	public ApplicationSettings(UserSettings userSettings,
			Boolean allowCommandsOnlyForAdmins, String bingMapsKey,
			String defaultPasswordHash,
			Boolean disallowDeviceManagementByUsers,
			Boolean eventRecordingEnabled, String language,
			String matchServiceUrl, Integer notificationExpirationPeriod,
			boolean registrationEnabled, String salt, Short updateInterval) {
		this.userSettings = userSettings;
		this.allowCommandsOnlyForAdmins = allowCommandsOnlyForAdmins;
		this.bingMapsKey = bingMapsKey;
		this.defaultPasswordHash = defaultPasswordHash;
		this.disallowDeviceManagementByUsers = disallowDeviceManagementByUsers;
		this.eventRecordingEnabled = eventRecordingEnabled;
		this.language = language;
		this.matchServiceUrl = matchServiceUrl;
		this.notificationExpirationPeriod = notificationExpirationPeriod;
		this.registrationEnabled = registrationEnabled;
		this.salt = salt;
		this.updateInterval = updateInterval;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userSettings_id")
	public UserSettings getUserSettings() {
		return this.userSettings;
	}

	public void setUserSettings(UserSettings userSettings) {
		this.userSettings = userSettings;
	}

	@Column(name = "allowCommandsOnlyForAdmins")
	public Boolean getAllowCommandsOnlyForAdmins() {
		return this.allowCommandsOnlyForAdmins;
	}

	public void setAllowCommandsOnlyForAdmins(Boolean allowCommandsOnlyForAdmins) {
		this.allowCommandsOnlyForAdmins = allowCommandsOnlyForAdmins;
	}

	@Column(name = "bingMapsKey")
	public String getBingMapsKey() {
		return this.bingMapsKey;
	}

	public void setBingMapsKey(String bingMapsKey) {
		this.bingMapsKey = bingMapsKey;
	}

	@Column(name = "defaultPasswordHash")
	public String getDefaultPasswordHash() {
		return this.defaultPasswordHash;
	}

	public void setDefaultPasswordHash(String defaultPasswordHash) {
		this.defaultPasswordHash = defaultPasswordHash;
	}

	@Column(name = "disallowDeviceManagementByUsers")
	public Boolean getDisallowDeviceManagementByUsers() {
		return this.disallowDeviceManagementByUsers;
	}

	public void setDisallowDeviceManagementByUsers(
			Boolean disallowDeviceManagementByUsers) {
		this.disallowDeviceManagementByUsers = disallowDeviceManagementByUsers;
	}

	@Column(name = "eventRecordingEnabled")
	public Boolean getEventRecordingEnabled() {
		return this.eventRecordingEnabled;
	}

	public void setEventRecordingEnabled(Boolean eventRecordingEnabled) {
		this.eventRecordingEnabled = eventRecordingEnabled;
	}

	@Column(name = "language")
	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@Column(name = "matchServiceURL")
	public String getMatchServiceUrl() {
		return this.matchServiceUrl;
	}

	public void setMatchServiceUrl(String matchServiceUrl) {
		this.matchServiceUrl = matchServiceUrl;
	}

	@Column(name = "notificationExpirationPeriod")
	public Integer getNotificationExpirationPeriod() {
		return this.notificationExpirationPeriod;
	}

	public void setNotificationExpirationPeriod(
			Integer notificationExpirationPeriod) {
		this.notificationExpirationPeriod = notificationExpirationPeriod;
	}

	@Column(name = "registrationEnabled", nullable = false)
	public boolean isRegistrationEnabled() {
		return this.registrationEnabled;
	}

	public void setRegistrationEnabled(boolean registrationEnabled) {
		this.registrationEnabled = registrationEnabled;
	}

	@Column(name = "salt")
	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@Column(name = "updateInterval")
	public Short getUpdateInterval() {
		return this.updateInterval;
	}

	public void setUpdateInterval(Short updateInterval) {
		this.updateInterval = updateInterval;
	}

}
