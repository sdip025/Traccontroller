package com.gps21.model;

// Generated Mar 16, 2017 3:16:37 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Pictures generated by hbm2java
 */
@Entity
@Table(name = "pictures", catalog = "traccar")
public class Pictures implements java.io.Serializable {

	private Long id;
	private byte[] data;
	private int height;
	private String mimeType;
	private String type;
	private int width;
	private Set<DeviceIcons> deviceIconsesForOfflineIconId = new HashSet<DeviceIcons>(
			0);
	private Set<DeviceIcons> deviceIconsesForDefaultIconId = new HashSet<DeviceIcons>(
			0);
	private Set<Devices> deviceses = new HashSet<Devices>(0);
	private Set<DeviceIcons> deviceIconsesForSelectedIconId = new HashSet<DeviceIcons>(
			0);

	public Pictures() {
	}

	public Pictures(int height, int width) {
		this.height = height;
		this.width = width;
	}

	public Pictures(byte[] data, int height, String mimeType, String type,
			int width, Set<DeviceIcons> deviceIconsesForOfflineIconId,
			Set<DeviceIcons> deviceIconsesForDefaultIconId,
			Set<Devices> deviceses,
			Set<DeviceIcons> deviceIconsesForSelectedIconId) {
		this.data = data;
		this.height = height;
		this.mimeType = mimeType;
		this.type = type;
		this.width = width;
		this.deviceIconsesForOfflineIconId = deviceIconsesForOfflineIconId;
		this.deviceIconsesForDefaultIconId = deviceIconsesForDefaultIconId;
		this.deviceses = deviceses;
		this.deviceIconsesForSelectedIconId = deviceIconsesForSelectedIconId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "data")
	public byte[] getData() {
		return this.data;
	}

	public void setData(byte[] data) {
		this.data = data;
	}

	@Column(name = "height", nullable = false)
	public int getHeight() {
		return this.height;
	}

	public void setHeight(int height) {
		this.height = height;
	}

	@Column(name = "mimeType")
	public String getMimeType() {
		return this.mimeType;
	}

	public void setMimeType(String mimeType) {
		this.mimeType = mimeType;
	}

	@Column(name = "type")
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "width", nullable = false)
	public int getWidth() {
		return this.width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "picturesByOfflineIconId")
	public Set<DeviceIcons> getDeviceIconsesForOfflineIconId() {
		return this.deviceIconsesForOfflineIconId;
	}

	public void setDeviceIconsesForOfflineIconId(
			Set<DeviceIcons> deviceIconsesForOfflineIconId) {
		this.deviceIconsesForOfflineIconId = deviceIconsesForOfflineIconId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "picturesByDefaultIconId")
	public Set<DeviceIcons> getDeviceIconsesForDefaultIconId() {
		return this.deviceIconsesForDefaultIconId;
	}

	public void setDeviceIconsesForDefaultIconId(
			Set<DeviceIcons> deviceIconsesForDefaultIconId) {
		this.deviceIconsesForDefaultIconId = deviceIconsesForDefaultIconId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pictures")
	public Set<Devices> getDeviceses() {
		return this.deviceses;
	}

	public void setDeviceses(Set<Devices> deviceses) {
		this.deviceses = deviceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "picturesBySelectedIconId")
	public Set<DeviceIcons> getDeviceIconsesForSelectedIconId() {
		return this.deviceIconsesForSelectedIconId;
	}

	public void setDeviceIconsesForSelectedIconId(
			Set<DeviceIcons> deviceIconsesForSelectedIconId) {
		this.deviceIconsesForSelectedIconId = deviceIconsesForSelectedIconId;
	}

}
