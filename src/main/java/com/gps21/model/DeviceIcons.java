package com.gps21.model;

// Generated Mar 16, 2017 3:16:37 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DeviceIcons generated by hbm2java
 */
@Entity
@Table(name = "device_icons", catalog = "traccar")
public class DeviceIcons implements java.io.Serializable {

	private Long id;
	private Pictures picturesBySelectedIconId;
	private Pictures picturesByDefaultIconId;
	private Pictures picturesByOfflineIconId;
	private Set<Devices> deviceses = new HashSet<Devices>(0);

	public DeviceIcons() {
	}

	public DeviceIcons(Pictures picturesBySelectedIconId,
			Pictures picturesByDefaultIconId, Pictures picturesByOfflineIconId,
			Set<Devices> deviceses) {
		this.picturesBySelectedIconId = picturesBySelectedIconId;
		this.picturesByDefaultIconId = picturesByDefaultIconId;
		this.picturesByOfflineIconId = picturesByOfflineIconId;
		this.deviceses = deviceses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "selectedIcon_id")
	public Pictures getPicturesBySelectedIconId() {
		return this.picturesBySelectedIconId;
	}

	public void setPicturesBySelectedIconId(Pictures picturesBySelectedIconId) {
		this.picturesBySelectedIconId = picturesBySelectedIconId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "defaultIcon_id")
	public Pictures getPicturesByDefaultIconId() {
		return this.picturesByDefaultIconId;
	}

	public void setPicturesByDefaultIconId(Pictures picturesByDefaultIconId) {
		this.picturesByDefaultIconId = picturesByDefaultIconId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "offlineIcon_id")
	public Pictures getPicturesByOfflineIconId() {
		return this.picturesByOfflineIconId;
	}

	public void setPicturesByOfflineIconId(Pictures picturesByOfflineIconId) {
		this.picturesByOfflineIconId = picturesByOfflineIconId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deviceIcons")
	public Set<Devices> getDeviceses() {
		return this.deviceses;
	}

	public void setDeviceses(Set<Devices> deviceses) {
		this.deviceses = deviceses;
	}

}
